# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 195670233722
  GKE_CLUSTER: testkubecluster  # TODO: update to cluster name
  GKE_ZONE: us-central1-c	   # TODO: update to cluster zone
  DEPLOYMENT_NAME: nestjs-k8s # TODO: update deployment name if changed in deployment.yaml
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: 195670233722

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - uses: actions/checkout@v3
    - name: run shell script
      run: echo commit hash is ${{ github.sha }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:${{ github.sha }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/testkube:latest
    #sdf
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: airy-dialect-342617
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: testkubecluster
        ZONE_NAME: us-central1-c
      with:
        args:  apply -f k8s/ | kubectl get svc | kubectl rollout status deployment/nestjs-k8s
    

    # - name: Build
    #   run: |-
    #     docker build \
    #       --tag "gcr.io/airy-dialect-342617/testkube:${{ github.sha }}" \
    #       --build-arg GITHUB_SHA="${{ github.sha }}" \
    #       --build-arg GITHUB_REF="${{ github.sha }}" \
    #       .

    # # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     docker push "gcr.io/airy-dialect-342617/testkube:${{ github.sha }}"

    # # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     cd k8s
        
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     cd k8s
    #     ./kustomize edit set image gcr.io/airy-dialect-342617/testkube:TAG=gcr.io/airy-dialect-342617/testkube:${{ github.sha }}
    #     ./kustomize build . | kubectl apply -f -
    #     kubectl rollout status deployment/nestjs-k8s
    #     kubectl get services -o wide


  # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     cd k8s
    #   # envsubst < service.yaml | kubectl apply -f -
    #     # envsubst < deployment.yaml | kubectl apply -f -
    #     # kubectl get services -o wide